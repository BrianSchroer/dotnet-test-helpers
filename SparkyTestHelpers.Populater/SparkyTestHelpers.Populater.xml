<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SparkyTestHelpers.Populater</name>
    </assembly>
    <members>
        <member name="T:SparkyTestHelpers.Population.GetRandom">
            <summary>
            Test helper methods using <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> to generate random values.
            </summary>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.InstanceOf``1(SparkyTestHelpers.Population.RandomValueProvider,System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an instance of the specified type and populate its properties with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="randomValueProvider">The <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/>.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create (default value is 5).</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New instance.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.InstanceOf``1(SparkyTestHelpers.Population.RandomValueProvider,System.Action{``0})">
            <summary>
            Create an instance of the specified type and populate its properties with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="randomValueProvider">The <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/>.</param>
            <param name="callback">"Callback" function to perform additional property assignments.</param>
            <returns>New instance.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.InstanceOf``1(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an instance of the specified type and populate its properties with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create (default value is 5).</param>
            <param name="maximumIEnumerableSize">Optional maximum number of items to generate for arrays / lists / IEnumerables (default value is 3).</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New instance.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.InstanceOf``1(System.Action{``0})">
            <summary>
            Create an instance of the specified type and populate its properties with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="callback">"Callback" function to perform additional property assignments.</param>
            <returns>New instance.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.ArrayOf``1(SparkyTestHelpers.Population.RandomValueProvider,System.Int32,System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an array of <typeparamref name="T"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="randomValueProvider">The <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/>.</param>
            <param name="count">The desired array count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New array of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.ArrayOf``1(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an array of <typeparamref name="T"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="count">The desired array count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="maximumIEnumerableSize">Optional maximum number of items to generate for "child" arrays / lists / IEnumerables.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.IEnumerableOf``1(SparkyTestHelpers.Population.RandomValueProvider,System.Int32,System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an <see cref="T:System.Collections.Generic.IEnumerable`1"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="randomValueProvider">The <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/>.</param>
            <param name="count">The desired <see cref="T:System.Collections.Generic.IEnumerable`1"/> count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.IEnumerableOf``1(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an <see cref="T:System.Collections.Generic.IEnumerable`1"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="count">The desired <see cref="T:System.Collections.Generic.IEnumerable`1"/> count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="maximumIEnumerableSize">Optional maximum number of items to generate for "child" arrays / lists / IEnumerables.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.ListOf``1(SparkyTestHelpers.Population.RandomValueProvider,System.Int32,System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create a <see cref="T:System.Collections.Generic.List`1"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="randomValueProvider">The <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/>.</param>
            <param name="count">The desired <see cref="T:System.Collections.Generic.List`1"/> count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.ListOf``1(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create a <see cref="T:System.Collections.Generic.List`1"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="count">The desired <see cref="T:System.Collections.Generic.List`1"/> count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="maximumIEnumerableSize">Optional maximum number of items to generate for "child" arrays / lists / ILists.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.IListOf``1(SparkyTestHelpers.Population.RandomValueProvider,System.Int32,System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an <see cref="T:System.Collections.Generic.IList`1"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="randomValueProvider">The <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/>.</param>
            <param name="count">The desired <see cref="T:System.Collections.Generic.IList`1"/> count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.IListOf``1(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Action{``0})">
            <summary>
            Create an <see cref="T:System.Collections.Generic.IList`1"/> with properties populated with random values.
            </summary>
            <typeparam name="T">The type of the instance for which properties are to be updated.</typeparam>
            <param name="count">The desired <see cref="T:System.Collections.Generic.IList`1"/> count.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create.</param>
            <param name="maximumIEnumerableSize">Optional maximum number of items to generate for "child" arrays / lists / ILists.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>New <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.ValuesFor``1(``0,SparkyTestHelpers.Population.RandomValueProvider,System.Nullable{System.Int32})">
            <summary>
            Populate existing instance of <typeparamref name="T"/> with random values.
            </summary>
            <typeparam name="T">The instance type.</typeparam>
            <param name="instance">The instance.</param>
            <param name="randomValueProvider">The <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> instance.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create (default value is 5).</param>
            <returns>Populated instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.ValuesFor``1(``0,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Populate existing instance of <typeparamref name="T"/> with random values.
            </summary>
            <typeparam name="T">The instance type.</typeparam>
            <param name="instance">The instance.</param>
            <param name="maximumDepth">Optional maximum "depth" of "child" class instances to create (default value is 5).</param>
            <param name="maximumIEnumerableSize">Optional maximum number of items to generate for arrays / lists / IEnumerables (default value is 3).</param>
            <returns>Populated instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Bool(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Boolean"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Byte(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Byte"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Byte"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Char(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Char"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Char"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.DateTime(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="M:SparkyTestHelpers.Population.GetRandom.DateTime(SparkyTestHelpers.Population.RandomValueProvider)"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="M:SparkyTestHelpers.Population.GetRandom.DateTime(SparkyTestHelpers.Population.RandomValueProvider)"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Decimal(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Decimal"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Double(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Double"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Double"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Float(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Single"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Single"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Guid(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="M:SparkyTestHelpers.Population.GetRandom.Guid(SparkyTestHelpers.Population.RandomValueProvider)"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="M:SparkyTestHelpers.Population.GetRandom.Guid(SparkyTestHelpers.Population.RandomValueProvider)"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Int(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Int32"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Int32"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.IntegerInRange(System.Int32,System.Int32)">
            <summary>
            Get random integer with the specified range.
            </summary>
            <param name="minValue">Minimum value.</param>
            <param name="maxValue">Maximum value.</param>
            <returns>Random integer.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Long(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Int64"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Int64"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.SByte(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.SByte"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.SByte"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.Short(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Int16"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.Int16"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.UInt(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.UInt32"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.ULong(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.UInt64"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.UShort(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.UInt16"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.EnumValue``1(SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.Enum"/> value.
            </summary>
            <typeparam name="TEnum">The <see cref="T:System.Enum"/> type.</typeparam>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <typeparamref name="TEnum"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.GetRandom.String(System.String,SparkyTestHelpers.Population.RandomValueProvider)">
            <summary>
            Get random <see cref="T:System.String"/> value.
            </summary>
            <param name="prefix">optional string prefix.</param>
            <param name="randomValueProvider">(Optional) <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> override.</param>
            <returns>Random <see cref="T:System.String"/> value.</returns>
        </member>
        <member name="T:SparkyTestHelpers.Population.IPopulaterValueProvider">
            <summary>
            <see cref="T:SparkyTestHelpers.Population.Populater"/> value provider.
            </summary>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetBool">
            <summary>
            Gets bool value.
            </summary>
            <returns>A <see cref="T:System.Boolean" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetByte">
            <summary>
            Gets byte value.
            </summary>
            <returns>A <see cref="T:System.Byte" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetByteArray">
            <summary>
            Gets byte array.
            </summary>
            <returns>A <see cref="T:System.Byte"/> array.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetChar">
            <summary>
            Gets char value.
            </summary>
            <returns>A <see cref="T:System.Char" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetDateTime">
            <summary>
            Gets DateTime value.
            </summary>
            <returns>A <see cref="T:System.DateTime" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetDecimal">
            <summary>
            Gets decimal value.
            </summary>
            <returns>A <see cref="T:System.Decimal" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetDouble">
            <summary>
            Gets double value.
            </summary>
            <returns>A <see cref="T:System.Double" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetEnum``1">
            <summary>
            Gets Enum value.
            </summary>
            <typeparam name="TEnum">The Enum type.</typeparam>
            <returns>A <typeparamref name="TEnum"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetEnum(System.Type)">
            <summary>
            Gets Enum value.
            </summary>
            <param name="enumType">The Enum type.</param>
            <returns>Enum value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetEnumerableSize">
            <summary>
            Gets size to be used for array / list / IEnumerable.
            </summary>
            <returns>Enumerable size.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetFloat">
            <summary>
            Gets float value.
            </summary>
            <returns>A <see cref="T:System.Single" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetGuid">
            <summary>
            Gets Guid value.
            </summary>
            <returns>A <see cref="T:System.Guid" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetInt">
            <summary>
            Gets int value.
            </summary>
            <returns>An <see cref="T:System.Int32" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetLong">
            <summary>
            Gets long value.
            </summary>
            <returns>A <see cref="T:System.Int64" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetSByte">
            <summary>
            Gets sbyte value.
            </summary>
            <returns>A <see cref="T:System.SByte" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetShort">
            <summary>
            Gets short value.
            </summary>
            <returns>A <see cref="T:System.Int16" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetString(System.String)">
            <summary>
            Gets string value.
            </summary>
            <param name="prefix">optional string prefix.</param>
            <returns>A <see cref="T:System.String"/> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetUInt">
            <summary>
            Gets uint value.
            </summary>
            <returns>A <see cref="T:System.UInt32" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetULong">
            <summary>
            Gets ulong value.
            </summary>
            <returns>A <see cref="T:System.UInt64" /> value.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.IPopulaterValueProvider.GetUShort">
            <summary>
            Gets ushort value.
            </summary>
            <returns>A <see cref="T:System.UInt16" /> value.</returns>
        </member>
        <member name="T:SparkyTestHelpers.Population.Populater">
            <summary>
            This class populates class instances with test data.
            </summary>
        </member>
        <member name="P:SparkyTestHelpers.Population.Populater.MaximumDepth">
            <summary>
            Maximum "depth" of "child" class instances to create (default value is 5).
            </summary>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.WithMaximumDepth(System.Int32)">
            <summary>
            Sets <see cref="P:SparkyTestHelpers.Population.Populater.MaximumDepth"/> value.
            </summary>
            <param name="maximumDepth">The maximum depth.</param>
            <returns>"This" <see cref="T:SparkyTestHelpers.Population.Populater"/> instance.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.CreateAndPopulate``1(SparkyTestHelpers.Population.IPopulaterValueProvider)">
            <summary>
            Create new instance of <typeparamref name="T"/> and populate with test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="valueProvider">The <see cref="T:SparkyTestHelpers.Population.IPopulaterValueProvider"/>
            (defaults to <see cref="T:SparkyTestHelpers.Population.SequentialValueProvider"/>).</param>
            <returns>The created and populated instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.CreateIEnumerableOf``1(System.Int32,SparkyTestHelpers.Population.IPopulaterValueProvider)">
            <summary>
            Create <see cref="T:System.Collections.Generic.IEnumerable`1"/> and populate with test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="count">The desired <see cref="T:System.Collections.Generic.IEnumerable`1"/> count.</param>
            <param name="valueProvider">The <see cref="T:SparkyTestHelpers.Population.IPopulaterValueProvider"/>
            (defaults to <see cref="T:SparkyTestHelpers.Population.SequentialValueProvider"/>).</param>
            <returns>The created and populated instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.CreateRandomArrayOf``1(System.Int32,System.Action{``0})">
            <summary>
            Create array of <typeparamref name="T"/> and populate with random test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="count">The desired array count.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>The created and populated array of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.CreateRandomIEnumerableOf``1(System.Int32,System.Action{``0})">
            <summary>
            Create <see cref="T:System.Collections.Generic.IEnumerable`1"/> and populate with random test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="count">The desired <see cref="T:System.Collections.Generic.IEnumerable`1"/> count.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>The created and populated <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.CreateRandomIListOf``1(System.Int32,System.Action{``0})">
            <summary>
            Create <see cref="T:System.Collections.Generic.IList`1"/> and populate with random test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="count">The desired list count.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>The created and populated <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.CreateRandomListOf``1(System.Int32,System.Action{``0})">
            <summary>
            Create <see cref="T:System.Collections.Generic.List`1"/> and populate with test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="count">The desired list count.</param>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>The created and populated <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.Populate``1(``0,SparkyTestHelpers.Population.IPopulaterValueProvider)">
            <summary>
            Populate existing instance of <typeparamref name="T"/> with test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="instance">The instance of <typeparamref name="T"/>.</param>
            <param name="valueProvider">The <see cref="T:SparkyTestHelpers.Population.IPopulaterValueProvider"/>
            (defaults to <see cref="T:SparkyTestHelpers.Population.SequentialValueProvider"/>.</param>
            <returns>The populated <typeparamref name="T"/> instance.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.CreateRandom``1(System.Action{``0})">
            <summary>
            Create new instance of <typeparamref name="T"/> and populate with random values.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="callback">Optional "callback" function to perform additional property assignments.</param>
            <returns>The created and populated instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.PopulateWithRandomValues``1(``0)">
            <summary>
            Populate existing instance of <typeparamref name="T"/> with random test data.
            </summary>
            <typeparam name="T">The class type.</typeparam>
            <param name="instance">The instance of <typeparamref name="T"/>.</param>
            <returns>The populated <typeparamref name="T"/> instance.</returns>
        </member>
        <member name="M:SparkyTestHelpers.Population.Populater.GetValue(SparkyTestHelpers.Population.IPopulaterValueProvider,System.Type,System.String,System.Int32)">
            <summary>
            Get value.
            </summary>
            <param name="valueProvider">The <see cref="T:SparkyTestHelpers.Population.IPopulaterValueProvider"/>.</param>
            <param name="type">The value type.</param>
            <param name="prefix">Prefix for string values.</param>
            <param name="depth">Depth of value within object hierarchy.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:SparkyTestHelpers.Population.RandomValueProvider">
            <summary>
            Random value provider for <see cref="T:SparkyTestHelpers.Population.Populater"/>.
            </summary>
        </member>
        <member name="P:SparkyTestHelpers.Population.RandomValueProvider.MaximumIEnumerableSize">
            <summary>
            Maximum number of items to generate for arrays / lists / IEnumerables (default value is 3).
            </summary>
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.#ctor">
            <summary>
            Creates a new <see cref="T:SparkyTestHelpers.Population.RandomValueProvider"/> instance.
            </summary>
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetBool">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetByte">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetByteArray">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetChar">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetDateTime">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetDecimal">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetDouble">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetEnum``1">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetEnum(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetEnumerableSize">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetFloat">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetGuid">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetInt">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetLong">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetSByte">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetShort">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetString(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetUInt">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetULong">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.RandomValueProvider.GetUShort">
            <inheritdoc />
        </member>
        <member name="T:SparkyTestHelpers.Population.SequentialValueProvider">
            <summary>
            Sequential value provider for <see cref="T:SparkyTestHelpers.Population.Populater"/>.
            </summary>
        </member>
        <member name="P:SparkyTestHelpers.Population.SequentialValueProvider.BaseDate">
            <summary>
            Base date to be used for populating <see cref="T:System.DateTime"/> properties.
            </summary>
        </member>
        <member name="P:SparkyTestHelpers.Population.SequentialValueProvider.EnumerableSize">
            <summary>
            Number of items to generate for arrays / lists / IEnumerables (default value is 3).
            </summary>
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.#ctor">
            <summary>
            Creates a new <see cref="T:SparkyTestHelpers.Population.SequentialValueProvider"/> instance.
            </summary>
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetBool">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetByte">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetByteArray">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetChar">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetDateTime">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetDecimal">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetDouble">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetEnum``1">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetEnum(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetEnumerableSize">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetFloat">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetGuid">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetInt">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetLong">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetSByte">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetShort">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetString(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetUInt">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetULong">
            <inheritdoc />
        </member>
        <member name="M:SparkyTestHelpers.Population.SequentialValueProvider.GetUShort">
            <inheritdoc />
        </member>
    </members>
</doc>
